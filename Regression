import pandas as pd
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.neural_network import MLPRegressor
from sklearn.metrics import mean_squared_error
0iris = load_iris()

X = pd.DataFrame(data=iris.data, columns=iris.feature_names)
y = pd.DataFrame(data=iris.target, columns=['target_variable'])

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

X_train.to_csv('train.csv', index=False)
X_test.to_csv('test.csv', index=False)
y_train.to_csv('train_labels.csv', index=False)
y_test.to_csv('test_labels.csv', index=False)

train_data = pd.read_csv('train_labels.csv')
test_data = pd.read_csv('test_labels.csv')

X_train = train_data.drop('target_variable', axis=1)
y_train = train_data['target_variable']
X_test = test_data.drop('target_variable', axis=1)
y_test = test_data['target_variable']
mlp_reg = MLPRegressor()

mlp_reg.fit(X_train, y_train)
y_pred = mlp_reg.predict(X_test)

#error calculation
mse = mean_squared_error(y_test, y_pred)
print('Test set mean squared error:', mse)

#accuracy
accuracy = mlp_reg.score(X_test, y_test)
print('Test set accuracy:', accuracy)
